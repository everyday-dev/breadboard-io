name: Release

on:
  push:
    branches: [ main, dev ]

env:
  PROJECT_NAME: "breadboard-io"

jobs:
  Generate KiCAD outputs:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Check out submodules
      run: git submodule update --init --recursive

    - name: Get Git Branch
      run: |
        echo "GIT_BRANCH=$(echo $GITHUB_REF_NAME | cut -d'/' -f 3)" >> $GITHUB_ENV

    - name: Install KiCAD
      run: |
        sudo add-apt-repository --yes ppa:kicad/kicad-dev-nightly
        sudo apt update
        sudo apt install kicad-nightly

    - name: Generate Netlist
      run: |
        kicad-cli-nightly sch export netlist --format kicadxml ./breadboard-io/breadboard-io.kicad_sch

    - name: Retrieve project revision
      run: |
        python ./util/getRevision.py ./${{env.PROJECT_NAME}}.xml ./revision.txt
        echo "REVISION=$(cat revision.txt)" >> $GITHUB_ENV

    - name: Create output directory
      run: mkdir -p output

    - name: Generate Schematic
      run: |
        kicad-cli-nightly sch export pdf ${{env.PROJECT_NAME}}/${{env.PROJECT_NAME}}.kicad_sch -o output/${{env.PROJECT_NAME}}_${{env.REVISION}}.pdf

    - name: Generate BOM
      run: |
        python ./util/bom_csv_grouped_by_mfp.py ./${{env.PROJECT_NAME}}.xml ./output/${{env.PROJECT_NAME}}_${{env.REVISION}}_BOM.csv

    - name: Generate STEP
      run: |
        kicad-cli-nightly pcb export step --subst-models ${{env.PROJECT_NAME}}/${{env.PROJECT_NAME}}.kicad_pcb -o output/${{env.PROJECT_NAME}}_${{env.REVISION}}.step

    - name: Upload local artifacts to CI job
      if: env.GIT_BRANCH == 'dev'
      uses: actions/upload-artifact@v3
      with:
        name: KiCAD Artifacts
        retention-days: 1
        path: output/**

    - name: Create Github release
      if: env.GIT_BRANCH == 'main'
      uses: ncipollo/release-action@v1
      with:
        artifacts: output/**
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: env.REVISION